Title,Body,Labels,Assignee
# === PHASE 1: Core Architecture and Backend ===
[001] Define Project Architecture,Create a high-level architecture diagram and folder structure for the SchoolOS system.,planning,architect-agent
[002] Setup Django + DRF Project,Initialize a new Django REST Framework project with PostgreSQL connection.,backend,backend-agent
[003] Design Database Schema,Design normalized PostgreSQL schema for users roles subjects grades attendance and assignments.,backend,backend-agent
[004] Implement Django Models and Serializers,Create Django models and DRF serializers according to the schema.,backend,backend-agent
[005] Implement Authentication (JWT + Roles),Set up JWT authentication and role-based access for Admin Teacher Student Parent.,backend,backend-agent
[006] Implement Grade Calculation Module,Develop percentage-based weighted grade calculation module.,backend,backend-agent
[007] Implement CRUD Endpoints,Add CRUD endpoints for Students Teachers and Subjects.,backend,backend-agent
[008] Generate PDF Reports and Transcripts,Generate PDF grade reports and transcripts using Django templates.,backend,backend-agent
[009] Backend Unit and Integration Tests,Add Pytest tests for backend models views and endpoints with >80% coverage.,backend,qa-agent
[010] Write Backend Setup Docs,Document backend environment setup and run instructions in /docs/BACKEND_SETUP.md.,documentation,docs-agent

# === PHASE 2: Frontend + Docs + QA ===
[011] Setup React + MUI Project,Initialize React project with Material UI routing and folder structure.,frontend,frontend-agent
[012] Implement Login + Role Dashboards,Develop login page and dashboards for Admin Teacher Student Parent roles.,frontend,frontend-agent
[013] CRUD Pages (Students Teachers Subjects),Create React forms and tables for CRUD operations.,frontend,frontend-agent
[014] Grades and Attendance UI,Implement grade input and attendance visualization.,frontend,frontend-agent
[015] Charts and Analytics Dashboard,Add charts and KPIs for performance tracking using Recharts.,frontend,frontend-agent
[016] Messaging UI (In-App Email),Develop Gmail-style internal messaging UI with mock data.,frontend,frontend-agent
[017] Frontend API Integration,Connect frontend components to backend REST endpoints via Axios.,frontend,frontend-agent
[018] User Interface Testing,Add frontend tests using React Testing Library or Cypress.,qa,qa-agent
[019] Write Frontend Setup Docs,Document frontend installation and usage in /docs/FRONTEND_SETUP.md.,documentation,docs-agent
[020] Create User Manual,Write end-user guide for Admin Teacher Student Parent roles.,documentation,docs-agent

# === PHASE 3: Integrations + DevOps ===
[021] Google OAuth2 Login Integration,Implement Google sign-in with OAuth2 tokens and refresh logic.,integration,integrations-agent
[022] Google Classroom API Integration,Sync assignments and grades between SchoolOS and Google Classroom API.,integration,integrations-agent
[023] Gmail API Integration,Integrate Gmail API for in-app messaging between users.,integration,integrations-agent
[024] Dockerize Backend and Frontend,Create Dockerfiles and docker-compose for both backend and frontend.,devops,devops-agent
[025] Setup AWS Environment (EC2 + RDS + S3),Deploy system on AWS with database and file storage configuration.,devops,devops-agent
[026] Setup CI/CD Pipeline,Configure GitHub Actions workflow for testing building and deployment.,devops,devops-agent
[027] Environment Secrets Management,Add .env templates and secure credentials handling for all environments.,devops,devops-agent
[028] Integration Testing,Write integration tests to validate Google API connections and backend routes.,qa,qa-agent
[029] Create Deployment Documentation,Write detailed deployment instructions in /docs/DEPLOYMENT.md.,documentation,docs-agent

# === PHASE 4: Project Governance ===
[030] Create Project Board,Configure GitHub Project Board with columns: Todo In Progress Review Done.,planning,architect-agent
[031] Setup Issue Templates,Add issue templates for features bugs and documentation.,planning,architect-agent
[032] Define Reporting Workflow,Document STATUS.md structure and reporting cadence.,planning,architect-agent
[033] Maintain CHANGELOG.md,Track version updates and changes using Semantic Versioning.,documentation,docs-agent
[034] Final QA and Polishing,Run full regression tests and prepare release candidate build.,qa,qa-agent
[035] Release Version v1.0.0,Tag final release and deploy production build to AWS.,devops,devops-agent